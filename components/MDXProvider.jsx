import React from "react";
import { MDXProvider } from "@mdx-js/react";
import { Prism as SyntaxHighlighter } from "react-syntax-highlighter";
import okaidia from "react-syntax-highlighter/dist/cjs/styles/prism/okaidia";
import SlidePage from "../layouts/SlidePage";
import Cover from "./Cover";
import SpeakerNotes from "./SpeakerNotes";
import Step from "./Step";
import Steps from "./Steps";
import { motion } from "framer-motion";
import {
  Box,
  Button,
  ButtonGroup,
  Center,
  Square,
  Circle,
  Container,
  Flex,
  Grid,
  GridItem,
  Stack,
  HStack,
  VStack,
  Wrap,
  WrapItem,
  Checkbox,
  CheckboxGroup,
  FormControl,
  FormLabel,
  FormErrorMessage,
  FormHelperText,
  Input,
  NumberInput,
  NumberInputField,
  NumberInputStepper,
  NumberIncrementStepper,
  NumberDecrementStepper,
  PinInput,
  PinInputField,
  Radio,
  RadioGroup,
  Select,
  Slider,
  SliderTrack,
  SliderFilledTrack,
  SliderThumb,
  Switch,
  Textarea,
  Badge,
  CloseButton,
  Code,
  Divider,
  Kbd,
  List,
  ListItem,
  ListIcon,
  OrderedList,
  UnorderedList,
  Stat,
  StatLabel,
  StatNumber,
  StatHelpText,
  StatArrow,
  StatGroup,
  Table,
  Thead,
  Tbody,
  Tfoot,
  Tr,
  Th,
  Td,
  TableCaption,
  Tag,
  TagLabel,
  TagLeftIcon,
  TagRightIcon,
  TagCloseButton,
  Alert,
  AlertIcon,
  AlertTitle,
  AlertDescription,
  CircularProgress,
  CircularProgressLabel,
  Progress,
  Skeleton,
  SkeletonCircle,
  SkeletonText,
  Spinner,
  useToast,
  Text,
  Heading,
  Tooltip,
  Accordion,
  AccordionItem,
  AccordionButton,
  AccordionPanel,
  AccordionIcon,
  Tabs,
  TabList,
  TabPanels,
  Tab,
  TabPanel,
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbSeparator,
  Link,
  LinkBox,
  LinkOverlay,
  Avatar,
  AvatarBadge,
  AvatarGroup,
  Image,
  useClipboard,
  useDisclosure,
  useTheme,
} from "@chakra-ui/react";

const mdComponents = {
  h1: (props) => <Heading as="h1" size="4xl" {...props} />,
  h2: (props) => <Heading as="h2" size="3xl" {...props} />,
  h3: (props) => <Heading as="h3" size="2xl" {...props} />,
  h4: (props) => <Heading as="h4" size="xl" {...props} />,
  h5: (props) => <Heading as="h5" size="lg" {...props} />,
  h6: (props) => <Heading as="h6" size="md" {...props} />,
  h7: (props) => <Heading as="h7" size="sm" {...props} />,
  h8: (props) => <Heading as="h8" size="xs" {...props} />,
  p: (props) => <Text as="p" {...props} />,
  ul: (props) => <UnorderedList {...props} />,
  ol: (props) => <OrderedList {...props} />,
  li: (props) => <ListItem {...props} />,
  code: (props) => <Code colorScheme="blue" {...props} />,
  table: (props) => <Table {...props} />,
  td: (props) => <Td {...props} />,
  tr: (props) => <Tr {...props} />,
  thead: (props) => <Thead {...props} />,
  tbody: (props) => <Tbody {...props} />,
  pre: (props) => {
    const { className } = props.children.props;
    const language = className ? className.replace("language-", "") : "js";
    return (
      <SyntaxHighlighter
        className={className}
        language={language}
        style={okaidia}
        {...props.children.props}
      />
    );
  },
  Cover,
  SlidePage,
  SpeakerNotes,
  Step,
  Steps,
  motion,
  Box,
  Button,
  ButtonGroup,
  Center,
  Square,
  Circle,
  Container,
  Flex,
  Grid,
  GridItem,
  Stack,
  HStack,
  VStack,
  Wrap,
  WrapItem,
  Checkbox,
  CheckboxGroup,
  FormControl,
  FormLabel,
  FormErrorMessage,
  FormHelperText,
  Input,
  NumberInput,
  NumberInputField,
  NumberInputStepper,
  NumberIncrementStepper,
  NumberDecrementStepper,
  PinInput,
  PinInputField,
  Radio,
  RadioGroup,
  Select,
  Slider,
  SliderTrack,
  SliderFilledTrack,
  SliderThumb,
  Switch,
  Textarea,
  Badge,
  CloseButton,
  Code,
  Divider,
  Kbd,
  List,
  ListItem,
  ListIcon,
  OrderedList,
  UnorderedList,
  Stat,
  StatLabel,
  StatNumber,
  StatHelpText,
  StatArrow,
  StatGroup,
  Table,
  Thead,
  Tbody,
  Tfoot,
  Tr,
  Th,
  Td,
  TableCaption,
  Tag,
  TagLabel,
  TagLeftIcon,
  TagRightIcon,
  TagCloseButton,
  Alert,
  AlertIcon,
  AlertTitle,
  AlertDescription,
  CircularProgress,
  CircularProgressLabel,
  Progress,
  Skeleton,
  SkeletonCircle,
  SkeletonText,
  Spinner,
  useToast,
  Text,
  Heading,
  Tooltip,
  Accordion,
  AccordionItem,
  AccordionButton,
  AccordionPanel,
  AccordionIcon,
  Tabs,
  TabList,
  TabPanels,
  Tab,
  TabPanel,
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbSeparator,
  Link,
  LinkBox,
  LinkOverlay,
  Avatar,
  AvatarBadge,
  AvatarGroup,
  Image,
  useClipboard,
  useDisclosure,
  useTheme,
};

export default ({ children }) => (
  <MDXProvider components={mdComponents}>{children}</MDXProvider>
);
